{
  "openapi": "3.0.0",
  "info": {
    "title": "PolicyAuthorization Service API",
    "version": "1.0.0",
    "description": "This is the Policy Authorization Service"
  },
  "externalDocs": {
    "description": "3GPP TS 29.514 V15.3.0; 5G System; Policy Authorization Service;Stage 3.",
    "url": "http://www.3gpp.org/ftp/Specs/archive/29_series/29.514/"
  },
  "servers": [
    {
      "url": "’{apiRoot}/af/v1/policy-authorization’",
      "variables": {
        "apiRoot": {
          "default": "https://example.com",
          "description": "apiRoot as defined in subclause 4.4 of 3GPP TS 29.501"
        }
      }
    }
  ],
  "paths": {
    "/app-sessions": {
      "post": {
        "summary": "Creates a new Individual Application Session Context resource",
        "operationId": "PostAppSessions",
        "tags": [
          "Application Sessions (Collection)"
        ],
        "requestBody": {
          "description": "Contains the information for the creation the resource",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppSessionContext"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation of the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSessionContext"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "Contains the URI of the created individual application session context resource, according to the structure: {apiRoot}/npcf-policyauthorization/v1/app-sessions/{appSessionId} or the URI of the created events subscription sub-resource, according to the structure: {apiRoot}/npcf-policyauthorization/v1/app-sessions/{appSessionId}/events-subscription}",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "303": {
            "description": "See Other. The result of the HTTP POST request would be equivalent to the existing Application Session Context. The HTTP response shall contain a Location header field set to the URI of the existing individual Application Session Context resource"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "headers": {
              "Retry-After": {
                "description": "Indicates the time the AF has to wait before making a new request. It can be a non-negative integer (decimal number) indicating the number of seconds the AF has to wait before making a new request or an HTTP-date after which the AF can retry a new request.",
                "schema": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "411": {
            "$ref": "#/components/responses/411"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "callbacks": {
          "terminationRequest": {
            "{$request.body#/notifUri}/terminate": {
              "post": {
                "requestBody": {
                  "description": "Request of the termination of the Individual Application Session Context",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TerminationInfo"
                      }
                    }
                  }
                },
                "responses": {
                  "204": {
                    "description": "The receipt of the notification is acknowledged."
                  },
                  "400": {
                    "$ref": "#/components/responses/400"
                  },
                  "401": {
                    "$ref": "#/components/responses/401"
                  },
                  "403": {
                    "$ref": "#/components/responses/403"
                  },
                  "404": {
                    "$ref": "#/components/responses/404"
                  },
                  "411": {
                    "$ref": "#/components/responses/411"
                  },
                  "413": {
                    "$ref": "#/components/responses/413"
                  },
                  "415": {
                    "$ref": "#/components/responses/415"
                  },
                  "429": {
                    "$ref": "#/components/responses/429"
                  },
                  "500": {
                    "$ref": "#/components/responses/500"
                  },
                  "503": {
                    "$ref": "#/components/responses/503"
                  },
                  "default": {
                    "$ref": "#/components/responses/default"
                  }
                }
              }
            }
          },
          "eventNotification": {
            "{$request.body#/evSubsc/notifUri}/notify": {
              "post": {
                "requestBody": {
                  "description": "Notification of an event occurrence in the PCF.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/EventsNotification"
                      }
                    }
                  }
                },
                "responses": {
                  "204": {
                    "description": "The receipt of the notification is acknowledged"
                  },
                  "400": {
                    "$ref": "#/components/responses/400"
                  },
                  "401": {
                    "$ref": "#/components/responses/401"
                  },
                  "403": {
                    "$ref": "#/components/responses/403"
                  },
                  "404": {
                    "$ref": "#/components/responses/404"
                  },
                  "411": {
                    "$ref": "#/components/responses/411"
                  },
                  "413": {
                    "$ref": "#/components/responses/413"
                  },
                  "415": {
                    "$ref": "#/components/responses/415"
                  },
                  "429": {
                    "$ref": "#/components/responses/429"
                  },
                  "500": {
                    "$ref": "#/components/responses/500"
                  },
                  "503": {
                    "$ref": "#/components/responses/503"
                  },
                  "default": {
                    "$ref": "#/components/responses/default"
                  }
                }
              }
            }
          },
          "afNotification": {
            "{$request.body#/afRoutingRequirement/upPathChgSub/notificationUri}": {
              "post": {
                "requestBody": {
                  "description": "Notification of UP_PATH_CHANGE event",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AfNotification"
                      }
                    }
                  }
                },
                "responses": {
                  "204": {
                    "description": "The receipt of the notification is acknowledged"
                  },
                  "default": {
                    "$ref": "#/components/responses/default"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app-sessions/{appSessionId}": {
      "get": {
        "summary": "Reads an existing Individual Application Session Context",
        "operationId": "GetAppSession",
        "tags": [
          "Individual Application Session Context (Document)"
        ],
        "parameters": [
          {
            "name": "appSessionId",
            "description": "string identifying the resource",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A representation of the resource is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSessionContext"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "patch": {
        "summary": "Modifies an existing Individual Application Session Context",
        "operationId": "ModAppSession",
        "tags": [
          "Individual Application Session Context (Document)"
        ],
        "parameters": [
          {
            "name": "appSessionId",
            "description": "string identifying the resource",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "modification of the resource.",
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppSessionContextUpdateData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful modification of the resource and a representation of that resource is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSessionContext"
                }
              }
            }
          },
          "204": {
            "description": "The successful modification"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "headers": {
              "Retry-After": {
                "description": "Indicates the time the AF has to wait before making a new request. It can be a non-negative integer (decimal number) indicating the number of seconds the AF has to wait before making a new request or an HTTP-date after which the AF can retry a new request.",
                "schema": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "411": {
            "$ref": "#/components/responses/411"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "callbacks": {
          "eventNotification": {
            "{$request.body#/evSubsc/notifUri}/notify": {
              "post": {
                "requestBody": {
                  "description": "Notification of an event occurrence in the PCF.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/EventsNotification"
                      }
                    }
                  }
                },
                "responses": {
                  "204": {
                    "description": "The receipt of the notification is acknowledged"
                  },
                  "400": {
                    "$ref": "#/components/responses/400"
                  },
                  "401": {
                    "$ref": "#/components/responses/401"
                  },
                  "403": {
                    "$ref": "#/components/responses/403"
                  },
                  "404": {
                    "$ref": "#/components/responses/404"
                  },
                  "411": {
                    "$ref": "#/components/responses/411"
                  },
                  "413": {
                    "$ref": "#/components/responses/413"
                  },
                  "415": {
                    "$ref": "#/components/responses/415"
                  },
                  "429": {
                    "$ref": "#/components/responses/429"
                  },
                  "500": {
                    "$ref": "#/components/responses/500"
                  },
                  "503": {
                    "$ref": "#/components/responses/503"
                  },
                  "default": {
                    "$ref": "#/components/responses/default"
                  }
                }
              }
            }
          },
          "afNotification": {
            "{$request.body#/afRoutReq/upPathChgSub/notificationUri}": {
              "post": {
                "requestBody": {
                  "description": "Notification of UP_PATH_CHANGE event",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AfNotification"
                      }
                    }
                  }
                },
                "responses": {
                  "204": {
                    "description": "The receipt of the notification is acknowledged"
                  },
                  "default": {
                    "$ref": "#/components/responses/default"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app-sessions/{appSessionId}/delete": {
      "post": {
        "summary": "Deletes an existing Individual Application Session Context",
        "operationId": "DeleteAppSession",
        "tags": [
          "Individual Application Session Context (Document)"
        ],
        "parameters": [
          {
            "name": "appSessionId",
            "description": "string identifying the Individual Application Session Context resource",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "deletion of the Individual Application Session Context resource, req notification",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsSubscReqData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The deletion of the resource is confirmed and a resource is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSessionContext"
                }
              }
            }
          },
          "204": {
            "description": "The deletion is confirmed without returning additional data."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "411": {
            "$ref": "#/components/responses/411"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/app-sessions/{appSessionId}/events-subscription": {
      "put": {
        "summary": "creates or modifies an Events Subscription subresource",
        "operationId": "updateEventsSubsc",
        "tags": [
          "Events Subscription (Document)"
        ],
        "parameters": [
          {
            "name": "appSessionId",
            "description": "string identifying the Events Subscription resource",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creation or modification of an Events Subscription resource.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsSubscReqData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The modification of the of the Events Subscription resource is confirmed its representation is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EventsSubscReqData"
                    },
                    {
                      "$ref": "#/components/schemas/EventsNotification"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "The creation of the Events Subscription resource is confirmed and its representation is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EventsSubscReqData"
                    },
                    {
                      "$ref": "#/components/schemas/EventsNotification"
                    }
                  ]
                }
              }
            },
            "headers": {
              "Location": {
                "description": "Contains the URI of the created Events Subscription resource, according to the structure: {apiRoot}/npcf-policyauthorization/v1/app-sessions/{appSessionId}/events-subscription}",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "The modification of the Events Subscription subresource is confirmed without returning additional data."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "411": {
            "$ref": "#/components/responses/411"
          },
          "413": {
            "$ref": "#/components/responses/413"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "callbacks": {
          "eventNotification": {
            "{$request.body#/notifUri}/notify": {
              "post": {
                "requestBody": {
                  "description": "Contains the information for the notification of an event occurrence in the PCF.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/EventsNotification"
                      }
                    }
                  }
                },
                "responses": {
                  "204": {
                    "description": "The receipt of the notification is acknowledged."
                  },
                  "400": {
                    "$ref": "#/components/responses/400"
                  },
                  "401": {
                    "$ref": "#/components/responses/401"
                  },
                  "403": {
                    "$ref": "#/components/responses/403"
                  },
                  "404": {
                    "$ref": "#/components/responses/404"
                  },
                  "411": {
                    "$ref": "#/components/responses/411"
                  },
                  "413": {
                    "$ref": "#/components/responses/413"
                  },
                  "415": {
                    "$ref": "#/components/responses/415"
                  },
                  "429": {
                    "$ref": "#/components/responses/429"
                  },
                  "500": {
                    "$ref": "#/components/responses/500"
                  },
                  "503": {
                    "$ref": "#/components/responses/503"
                  },
                  "default": {
                    "$ref": "#/components/responses/default"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes the Events Subscription subresource",
        "operationId": "DeleteEventsSubsc",
        "tags": [
          "Events Subscription (Document)"
        ],
        "parameters": [
          {
            "name": "appSessionId",
            "description": "string identifying the Individual Application Session Context resource",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The deletion of the of the Events Subscription sub-resource is confirmed without returning additional data."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppSessionContext": {
        "description": "Represents an Individual Application Session Context resource.",
        "type": "object",
        "properties": {
          "ascReqData": {
            "$ref": "#/components/schemas/AppSessionContextReqData"
          },
          "ascRespData": {
            "$ref": "#/components/schemas/AppSessionContextRespData"
          },
          "evsNotif": {
            "$ref": "#/components/schemas/EventsNotification"
          }
        }
      },
      "AppSessionContextReqData": {
        "description": "Identifies the service requirements of an Individual Application Session Context.",
        "type": "object",
        "required": [
          "notifUri",
          "suppFeat"
        ],
        "oneOf": [
          {
            "required": [
              "ueIpv4"
            ]
          },
          {
            "required": [
              "ueIpv6"
            ]
          },
          {
            "required": [
              "ueMac"
            ]
          }
        ],
        "properties": {
          "afAppId": {
            "$ref": "#/components/schemas/AfAppId"
          },
          "afRoutReq": {
            "$ref": "#/components/schemas/AfRoutingRequirement"
          },
          "aspId": {
            "$ref": "#/components/schemas/AspId"
          },
          "bdtRefId": {
            "$ref": "#/components/schemas/BdtReferenceId"
          },
          "dnn": {
            "$ref": "#/components/schemas/Dnn"
          },
          "evSubsc": {
            "$ref": "#/components/schemas/EventsSubscReqData"
          },
          "medComponents": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MediaComponent"
            },
            "minProperties": 1
          },
          "ipDomain": {
            "type": "string"
          },
          "mpsId": {
            "description": "indication of MPS service request",
            "type": "string"
          },
          "notifUri": {
            "$ref": "#/components/schemas/Uri"
          },
          "sliceInfo": {
            "$ref": "#/components/schemas/Snssai"
          },
          "sponId": {
            "$ref": "#/components/schemas/SponId"
          },
          "sponStatus": {
            "$ref": "#/components/schemas/SponsoringStatus"
          },
          "supi": {
            "$ref": "#/components/schemas/Supi"
          },
          "gpsi": {
            "$ref": "#/components/schemas/Gpsi"
          },
          "suppFeat": {
            "$ref": "#/components/schemas/SupportedFeatures"
          },
          "ueIpv4": {
            "$ref": "#/components/schemas/Ipv4Addr"
          },
          "ueIpv6": {
            "$ref": "#/components/schemas/Ipv6Addr"
          },
          "ueMac": {
            "$ref": "#/components/schemas/MacAddr48"
          },
          "afwebsockNotifConfig": {
            "$ref": "#/components/schemas/AfwebsockNotifConfig"
          }
        }
      },
      "AppSessionContextRespData": {
        "description": "Describes the authorization data of an Individual Application Session Context created by the PCF.",
        "type": "object",
        "properties": {
          "servAuthInfo": {
            "$ref": "#/components/schemas/ServAuthInfo"
          },
          "suppFeat": {
            "$ref": "#/components/schemas/SupportedFeatures"
          },
          "websocketUri": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "AppSessionContextUpdateData": {
        "description": "Identifies the modifications to an Individual Application Session Context and may include the modifications to the sub-resource Events Subscription.",
        "type": "object",
        "properties": {
          "afAppId": {
            "$ref": "#/components/schemas/AfAppId"
          },
          "afRoutReq": {
            "$ref": "#/components/schemas/AfRoutingRequirement"
          },
          "aspId": {
            "$ref": "#/components/schemas/AspId"
          },
          "bdtRefId": {
            "$ref": "#/components/schemas/BdtReferenceId"
          },
          "evSubsc": {
            "$ref": "#/components/schemas/EventsSubscReqData"
          },
          "medComponents": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MediaComponent"
            },
            "minProperties": 1
          },
          "mpsId": {
            "description": "indication of MPS service request",
            "type": "string"
          },
          "sponId": {
            "$ref": "#/components/schemas/SponId"
          },
          "sponStatus": {
            "$ref": "#/components/schemas/SponsoringStatus"
          },
          "afwebsockNotifConfig": {
            "$ref": "#/components/schemas/AfwebsockNotifConfig"
          }
        }
      },
      "EventsSubscReqData": {
        "description": "Identifies the events the application subscribes to.",
        "type": "object",
        "required": [
          "events"
        ],
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AfEventSubscription"
            },
            "minItems": 1
          },
          "notifUri": {
            "$ref": "#/components/schemas/Uri"
          },
          "usgThres": {
            "$ref": "#/components/schemas/UsageThreshold"
          }
        }
      },
      "MediaComponent": {
        "description": "Identifies a media component.",
        "type": "object",
        "required": [
          "medCompN"
        ],
        "properties": {
          "afAppId": {
            "$ref": "#/components/schemas/AfAppId"
          },
          "afRoutReq": {
            "$ref": "#/components/schemas/AfRoutingRequirement"
          },
          "contVer": {
            "$ref": "#/components/schemas/ContentVersion"
          },
          "codecs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodecData"
            },
            "minItems": 1,
            "maxItems": 2
          },
          "fStatus": {
            "$ref": "#/components/schemas/FlowStatus"
          },
          "marBwDl": {
            "$ref": "#/components/schemas/BitRate"
          },
          "marBwUl": {
            "$ref": "#/components/schemas/BitRate"
          },
          "medCompN": {
            "type": "integer"
          },
          "medSubComps": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MediaSubComponent"
            },
            "minProperties": 1
          },
          "medType": {
            "$ref": "#/components/schemas/MediaType"
          },
          "mirBwDl": {
            "$ref": "#/components/schemas/BitRate"
          },
          "mirBwUl": {
            "$ref": "#/components/schemas/BitRate"
          },
          "resPrio": {
            "$ref": "#/components/schemas/ReservPriority"
          }
        }
      },
      "MediaSubComponent": {
        "description": "Identifies a media subcomponent",
        "type": "object",
        "required": [
          "fNum"
        ],
        "properties": {
          "ethfDescs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EthFlowDescription"
            },
            "minItems": 1,
            "maxItems": 2
          },
          "fNum": {
            "type": "integer"
          },
          "fDescs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowDescription"
            },
            "minItems": 1,
            "maxItems": 2
          },
          "fStatus": {
            "$ref": "#/components/schemas/FlowStatus"
          },
          "marBwDl": {
            "$ref": "#/components/schemas/BitRate"
          },
          "marBwUl": {
            "$ref": "#/components/schemas/BitRate"
          },
          "tosTrCl": {
            "$ref": "#/components/schemas/TosTrafficClass"
          },
          "flowUsage": {
            "$ref": "#/components/schemas/FlowUsage"
          }
        }
      },
      "EventsNotification": {
        "description": "describes the notification of a matched event",
        "type": "object",
        "required": [
          "evSubsUri",
          "evNotifs"
        ],
        "properties": {
          "accessType": {
            "$ref": "#/components/schemas/AccessType"
          },
          "anGwAddr": {
            "$ref": "#/components/schemas/AnGwAddress"
          },
          "evSubsUri": {
            "$ref": "#/components/schemas/Uri"
          },
          "evNotifs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AfEventNotification"
            },
            "minItems": 1
          },
          "failedResourcAllocReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourcesAllocationInfo"
            },
            "minItems": 1
          },
          "plmnId": {
            "$ref": "#/components/schemas/PlmnId"
          },
          "qncReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QosNotificationControlInfo"
            },
            "minItems": 1
          },
          "ratType": {
            "$ref": "#/components/schemas/RatType"
          },
          "usgRep": {
            "$ref": "#/components/schemas/AccumulatedUsage"
          }
        }
      },
      "AfwebsockNotifConfig": {
        "description": "describes the websocket configuration for AF notifications",
        "type": "object",
        "properties": {
          "requestWebsocketUri": {
            "type": "boolean",
            "description": "Set by the consumer to indicate that the Websocket delivery is requested."
          },
          "consumerID": {
            "description": "Unique Identification of the consumer. Set by consumer",
            "type": "string"
          }
        }
      },
      "AfEventSubscription": {
        "description": "describes the event information delivered in the subscription",
        "type": "object",
        "required": [
          "event"
        ],
        "properties": {
          "event": {
            "$ref": "#/components/schemas/AfEvent"
          },
          "notifMethod": {
            "$ref": "#/components/schemas/AfNotifMethod"
          }
        }
      },
      "AfEventNotification": {
        "description": "describes the event information delivered in the notification",
        "type": "object",
        "required": [
          "event"
        ],
        "properties": {
          "event": {
            "$ref": "#/components/schemas/AfEvent"
          },
          "flows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flows"
            },
            "minItems": 1
          }
        }
      },
      "TerminationInfo": {
        "description": "indicates the cause for requesting the deletion of the Individual Application Session Context resource",
        "type": "object",
        "required": [
          "termCause",
          "resUri"
        ],
        "properties": {
          "termCause": {
            "$ref": "#/components/schemas/TerminationCause"
          },
          "resUri": {
            "$ref": "#/components/schemas/Uri"
          }
        }
      },
      "AfRoutingRequirement": {
        "description": "describes the event information delivered in the subscription",
        "type": "object",
        "properties": {
          "appReloc": {
            "type": "boolean"
          },
          "routeToLocs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteToLocation"
            },
            "minItems": 1
          },
          "spVal": {
            "$ref": "#/components/schemas/SpatialValidity"
          },
          "tempVals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemporalValidity"
            },
            "minItems": 1
          },
          "upPathChgSub": {
            "$ref": "#/components/schemas/UpPathChgEvent"
          }
        }
      },
      "AfNotification": {
        "description": "describes the notification sent by AF to consumer",
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/NotifyEvent"
          },
          "payload": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "description": "Payload is based on the event. For UP_PATH_CHANGE, it is NotificationUpPathChg"
          }
        },
        "required": [
          "event",
          "payload"
        ]
      },
      "NotificationUpPathChg": {
        "type": "object",
        "properties": {
          "notifyID": {
            "type": "string",
            "description": "Identifies the notification correlation, this is appSessionId in Policy Authorization"
          },
          "dnaiChgType": {
            "$ref": "#/components/schemas/DnaiChangeType"
          },
          "sourceTrafficRoute": {
            "$ref": "#/components/schemas/RouteToLocation"
          },
          "subscribedEvent": {
            "$ref": "#/components/schemas/SubscribedEvent"
          },
          "targetTrafficRoute": {
            "$ref": "#/components/schemas/RouteToLocation"
          },
          "gpsi": {
            "$ref": "#/components/schemas/Gpsi"
          },
          "srcUeIpv4Addr": {
            "$ref": "#/components/schemas/Ipv4Addr"
          },
          "srcUeIpv6Prefix": {
            "$ref": "#/components/schemas/Ipv6Prefix"
          },
          "tgtUeIpv4Addr": {
            "$ref": "#/components/schemas/Ipv4Addr"
          },
          "tgtUeIpv6Prefix": {
            "$ref": "#/components/schemas/Ipv6Prefix"
          },
          "ueMac": {
            "$ref": "#/components/schemas/MacAddr48"
          }
        },
        "required": [
          "dnaiChgType",
          "subscribedEvent",
          "notifyID"
        ]
      },
      "SubscribedEvent": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "UP_PATH_CHANGE"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "SpatialValidity": {
        "description": "describes explicitly the route to an Application location",
        "type": "object",
        "required": [
          "presenceInfoList"
        ],
        "properties": {
          "presenceInfoList": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PresenceInfo"
            },
            "minProperties": 1
          }
        }
      },
      "AnGwAddress": {
        "description": "describes the address of the access network gateway control node",
        "type": "object",
        "anyOf": [
          {
            "required": [
              "anGwIpv4Addr"
            ]
          },
          {
            "required": [
              "anGwIpv6Addr"
            ]
          }
        ],
        "properties": {
          "anGwIpv4Addr": {
            "$ref": "#/components/schemas/Ipv4Addr"
          },
          "anGwIpv6Addr": {
            "$ref": "#/components/schemas/Ipv6Addr"
          }
        }
      },
      "Flows": {
        "description": "Identifies the flows",
        "type": "object",
        "required": [
          "medCompN"
        ],
        "properties": {
          "contVers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentVersion"
            },
            "minItems": 1
          },
          "fNums": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "minItems": 1
          },
          "medCompN": {
            "type": "integer"
          }
        }
      },
      "EthFlowDescription": {
        "description": "Identifies an Ethernet flow",
        "type": "object",
        "required": [
          "ethType"
        ],
        "properties": {
          "destMacAddr": {
            "$ref": "#/components/schemas/MacAddr48"
          },
          "ethType": {
            "type": "string"
          },
          "fDesc": {
            "$ref": "#/components/schemas/FlowDescription"
          },
          "fDir": {
            "$ref": "#/components/schemas/FlowDirection"
          },
          "sourceMacAddr": {
            "$ref": "#/components/schemas/MacAddr48"
          },
          "vlanTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "maxItems": 2
          }
        }
      },
      "ResourcesAllocationInfo": {
        "description": "describes the status of the PCC rule(s) related to certain media components.",
        "type": "object",
        "required": [
          "mcResourcStatus"
        ],
        "properties": {
          "mcResourcStatus": {
            "$ref": "#/components/schemas/MediaComponentResourcesStatus"
          },
          "flows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flows"
            },
            "minItems": 1
          }
        }
      },
      "TemporalValidity": {
        "description": "Indicates the time interval(s) during which the AF request is to be applied",
        "type": "object",
        "properties": {
          "startTime": {
            "$ref": "#/components/schemas/DateTime"
          },
          "stopTime": {
            "$ref": "#/components/schemas/DateTime"
          }
        }
      },
      "QosNotificationControlInfo": {
        "description": "Indicates whether the QoS targets for a GRB flow are not  guaranteed or guaranteed again",
        "type": "object",
        "required": [
          "notifType"
        ],
        "properties": {
          "notifType": {
            "$ref": "#/components/schemas/QosNotifType"
          },
          "flows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flows"
            },
            "minItems": 1
          }
        }
      },
      "AfAppId": {
        "description": "Contains an AF application identifier.",
        "type": "string"
      },
      "AspId": {
        "description": "Contains an identity of an application service provider.",
        "type": "string"
      },
      "CodecData": {
        "description": "Contains codec related information.",
        "type": "string"
      },
      "ContentVersion": {
        "description": "Represents the content version of some content.",
        "type": "integer"
      },
      "FlowDescription": {
        "description": "Defines a packet filter of an IP flow.",
        "type": "string"
      },
      "SponId": {
        "description": "Contains an identity of a sponsor.",
        "type": "string"
      },
      "TosTrafficClass": {
        "description": "2-octet string, where each octet is encoded in hexadecimal representation. The first octet contains the IPv4 Type-of-Service or the IPv6 Traffic-Class field and the second octet contains the ToS/Traffic Class mask field.",
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Uri"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem."
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code for this occurrence of the problem."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "instance": {
            "$ref": "#/components/schemas/Uri"
          },
          "cause": {
            "type": "string",
            "description": "A machine-readable application error cause specific to this occurrence of the problem. This IE should be present and provide application-related error information, if available."
          },
          "invalidParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            },
            "minItems": 1,
            "description": "Description of invalid parameters, for a request rejected due to invalid parameters."
          }
        }
      },
      "Uri": {
        "type": "string",
        "description": "string providing an URI formatted according to IETF RFC 3986."
      },
      "InvalidParam": {
        "type": "object",
        "properties": {
          "param": {
            "type": "string",
            "description": "Attribute's name encoded as a JSON Pointer, or header's name."
          },
          "reason": {
            "type": "string",
            "description": "A human-readable reason, e.g. \"must be a positive integer\"."
          }
        },
        "required": [
          "param"
        ]
      },
      "DateTime": {
        "type": "string",
        "description": "string with format \"date-time\" as defined in OpenAPI."
      },
      "Ipv4Addr": {
        "type": "string",
        "description": "string identifying a Ipv4 address formatted in the \"dotted decimal\" notation as defined in IETF RFC 1166."
      },
      "Ipv6Addr": {
        "type": "string",
        "description": "string identifying a Ipv6 address formatted according to clause 4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of IETF RFC 5952 shall not be used."
      },
      "Ipv6Prefix": {
        "type": "string",
        "allOf": [
          {
            "pattern": "^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\\/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
          },
          {
            "pattern": "^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\\/.+)$"
          }
        ],
        "example": "2001:db8:abcd:12::0/64"
      },
      "Snssai": {
        "type": "object",
        "properties": {
          "sst": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255
          },
          "sd": {
            "type": "string",
            "pattern": "^[A-Fa-f0-9]{6}$"
          }
        },
        "required": [
          "sst"
        ]
      },
      "Dnn": {
        "type": "string"
      },
      "Gpsi": {
        "type": "string",
        "pattern": "^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$"
      },
      "SupportedFeatures": {
        "description": "A string used to indicate the features supported by an API that is used as defined in subclause 6.6 in 3GPP TS 29.500 [1]. The string shall contain a bitmask indicating supported features in hexadecimal representation. Each character in the string shall take a value of \"0\" to \"9\" or \"A\" to \"F\" and shall represent the support of 4 features as described in table 5.2.2-3. The most significant character representing the highest-numbered features shall appear first in the string, and the character representing features 1 to 4 shall appear last in the string. The list of features and their numbering (starting with 1) are defined separately for each API. Possible features for traffic influencing are Notification_websocket(1), Notification_test_event(2)",
        "type": "string",
        "pattern": "^[A-Fa-f0-9]*$"
      },
      "MacAddr48": {
        "type": "string",
        "pattern": "^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$"
      },
      "Supi": {
        "type": "string",
        "pattern": "^(imsi-[0-9]{5,15}|nai-.+|.+)$"
      },
      "BitRate": {
        "type": "string",
        "pattern": "^\\d+(\\.\\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$"
      },
      "AccessType": {
        "type": "string",
        "enum": [
          "3GPP_ACCESS",
          "NON_3GPP_ACCESS"
        ]
      },
      "RatType": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "NR",
              "EUTRA",
              "WLAN",
              "VIRTUAL"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "Mcc": {
        "type": "string",
        "pattern": "^\\d{3}$"
      },
      "Mnc": {
        "type": "string",
        "pattern": "^\\d{2,3}$"
      },
      "PlmnId": {
        "type": "object",
        "properties": {
          "mcc": {
            "$ref": "#/components/schemas/Mcc"
          },
          "mnc": {
            "$ref": "#/components/schemas/Mnc"
          }
        },
        "required": [
          "mcc",
          "mnc"
        ]
      },
      "Dnai": {
        "description": "Identifies the location of the application.",
        "type": "string"
      },
      "Uinteger": {
        "type": "integer",
        "minimum": 0
      },
      "RouteToLocation": {
        "type": "object",
        "properties": {
          "dnai": {
            "$ref": "#/components/schemas/Dnai"
          },
          "routeInfo": {
            "$ref": "#/components/schemas/RouteInformation"
          },
          "routeProfId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "dnai"
        ],
        "anyOf": [
          {
            "required": [
              "routeInfo"
            ]
          },
          {
            "required": [
              "routeProfId"
            ]
          }
        ],
        "nullable": true
      },
      "RouteInformation": {
        "type": "object",
        "properties": {
          "ipv4Addr": {
            "$ref": "#/components/schemas/Ipv4Addr"
          },
          "ipv6Addr": {
            "$ref": "#/components/schemas/Ipv6Addr"
          },
          "portNumber": {
            "$ref": "#/components/schemas/Uinteger"
          }
        },
        "required": [
          "portNumber"
        ],
        "nullable": true
      },
      "PresenceState": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "IN_AREA",
              "OUT_OF_AREA",
              "UNKNOWN",
              "INACTIVE"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "Tac": {
        "type": "string",
        "pattern": "(^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)"
      },
      "EutraCellId": {
        "type": "string",
        "pattern": "^[A-Fa-f0-9]{7}$"
      },
      "Ecgi": {
        "type": "object",
        "properties": {
          "plmnId": {
            "$ref": "#/components/schemas/PlmnId"
          },
          "eutraCellId": {
            "$ref": "#/components/schemas/EutraCellId"
          }
        },
        "required": [
          "plmnId",
          "eutraCellId"
        ]
      },
      "Tai": {
        "type": "object",
        "properties": {
          "plmnId": {
            "$ref": "#/components/schemas/PlmnId"
          },
          "tac": {
            "$ref": "#/components/schemas/Tac"
          }
        },
        "required": [
          "plmnId",
          "tac"
        ]
      },
      "Ncgi": {
        "type": "object",
        "properties": {
          "plmnId": {
            "$ref": "#/components/schemas/PlmnId"
          },
          "nrCellId": {
            "$ref": "#/components/schemas/NrCellId"
          }
        },
        "required": [
          "plmnId",
          "nrCellId"
        ]
      },
      "NrCellId": {
        "type": "string",
        "pattern": "^[A-Fa-f0-9]{9}$"
      },
      "N3IwfId": {
        "type": "string",
        "pattern": "^[A-Fa-f0-9]+$"
      },
      "NgeNbId": {
        "type": "string",
        "pattern": "^(MacroNGeNB-[A-Fa-f0-9]{5}|LMacroNGeNB-[A-Fa-f0-9]{6}|SMacroNGeNB-[A-Fa-f0-9]{5})$"
      },
      "GNbId": {
        "type": "object",
        "properties": {
          "bitLength": {
            "type": "integer",
            "minimum": 22,
            "maximum": 32
          },
          "gNBValue": {
            "type": "string",
            "pattern": "^[A-Fa-f0-9]{6,8}$"
          }
        },
        "required": [
          "bitLength",
          "gNBValue"
        ]
      },
      "GlobalRanNodeId": {
        "type": "object",
        "properties": {
          "plmnId": {
            "$ref": "#/components/schemas/PlmnId"
          },
          "n3IwfId": {
            "$ref": "#/components/schemas/N3IwfId"
          },
          "gNbId": {
            "$ref": "#/components/schemas/GNbId"
          },
          "ngeNbId": {
            "$ref": "#/components/schemas/NgeNbId"
          }
        },
        "oneOf": [
          {
            "required": [
              "n3IwfId"
            ]
          },
          {
            "required": [
              "gNbId"
            ]
          },
          {
            "required": [
              "ngeNbId"
            ]
          }
        ],
        "required": [
          "plmnId"
        ]
      },
      "Link": {
        "type": "string",
        "description": "string formatted according to IETF RFC 3986 identifying a referenced resource."
      },
      "PresenceInfo": {
        "type": "object",
        "properties": {
          "praId": {
            "type": "string"
          },
          "presenceState": {
            "$ref": "#/components/schemas/PresenceState"
          },
          "trackingAreaList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tai"
            },
            "minItems": 1
          },
          "ecgiList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ecgi"
            },
            "minItems": 1
          },
          "ncgiList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ncgi"
            },
            "minItems": 1
          },
          "globalRanNodeIdList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalRanNodeId"
            },
            "minItems": 1
          }
        }
      },
      "DurationSec": {
        "type": "integer",
        "minimum": 0,
        "description": "Unsigned integer identifying a period of time in units of seconds."
      },
      "Volume": {
        "type": "integer",
        "format": "int64",
        "minimum": 0,
        "description": "Unsigned integer identifying a volume in units of bytes."
      },
      "UsageThreshold": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/DurationSec"
          },
          "totalVolume": {
            "$ref": "#/components/schemas/Volume"
          },
          "downlinkVolume": {
            "$ref": "#/components/schemas/Volume"
          },
          "uplinkVolume": {
            "$ref": "#/components/schemas/Volume"
          }
        }
      },
      "FlowDirection": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "DOWNLINK",
              "UPLINK",
              "BIDIRECTIONAL",
              "UNSPECIFIED"
            ]
          },
          {
            "type": "string",
            "description": "This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.\n"
          }
        ],
        "description": "Possible values are - DOWNLINK: The corresponding filter applies for traffic to the UE. - UPLINK: The corresponding filter applies for traffic from the UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to the UE (downlink), but has no specific direction declared. The service data flow detection shall apply the filter for uplink traffic as if the filter was bidirectional. The PCF shall not use the value UNSPECIFIED in filters created by the network in NW-initiated procedures. The PCF shall only include the value UNSPECIFIED in filters in UE-initiated procedures if the same value is received from the SMF.\n"
      },
      "DnaiChangeType": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "EARLY",
              "EARLY_LATE",
              "LATE"
            ]
          },
          {
            "type": "string",
            "description": "This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.\n"
          }
        ],
        "description": "Possible values are - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.\n"
      },
      "UpPathChgEvent": {
        "type": "object",
        "properties": {
          "notificationUri": {
            "$ref": "#/components/schemas/Uri"
          },
          "notifCorreId": {
            "type": "string",
            "description": "It is used to set the value of Notification Correlation ID in the notification sent by the SMF and should be a unique identification of notification"
          },
          "dnaiChgType": {
            "$ref": "#/components/schemas/DnaiChangeType"
          }
        },
        "required": [
          "dnaiChgType",
          "notifCorreId"
        ],
        "nullable": true
      },
      "BdtReferenceId": {
        "type": "string",
        "description": "string identifying a BDT Reference ID as defined in subclause 5.3.3 of 3GPP TS 29.154."
      },
      "AccumulatedUsage": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/DurationSec"
          },
          "totalVolume": {
            "$ref": "#/components/schemas/Volume"
          },
          "downlinkVolume": {
            "$ref": "#/components/schemas/Volume"
          },
          "uplinkVolume": {
            "$ref": "#/components/schemas/Volume"
          }
        }
      },
      "NotifyEvent": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "UP_PATH_CHANGE"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "MediaType": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "AUDIO",
              "VIDEO",
              "DATA",
              "APPLICATION",
              "CONTROL",
              "TEXT",
              "MESSAGE",
              "OTHER"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "ReservPriority": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "PRIO_1",
              "PRIO_2",
              "PRIO_3",
              "PRIO_4",
              "PRIO_5",
              "PRIO_6",
              "PRIO_7",
              "PRIO_8",
              "PRIO_9",
              "PRIO_10",
              "PRIO_11",
              "PRIO_12",
              "PRIO_13",
              "PRIO_14",
              "PRIO_15",
              "PRIO_16"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "ServAuthInfo": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "TP_NOT_KNOWN",
              "TP_EXPIRED",
              "TP_NOT_YET_OCURRED"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "SponsoringStatus": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "SPONSOR_DISABLED",
              "SPONSOR_ENABLED"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "AfEvent": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "ACCESS_TYPE_CHANGE",
              "FAILED_RESOURCES_ALLOCATION",
              "PLMN_CHG",
              "QOS_NOTIF",
              "SUCCESSFUL_RESOURCES_ALLOCATION",
              "USAGE_REPORT"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "AfNotifMethod": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "EVENT_DETECTION",
              "ONE_TIME"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "QosNotifType": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "GUARANTEED",
              "NOT_GUARANTEED"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "TerminationCause": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "ALL_SDF_DEACTIVATION",
              "PDU_SESSION_TERMINATION"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "MediaComponentResourcesStatus": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "FlowUsage": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "NO_INFO",
              "RTCP"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "FlowStatus": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "ENABLED-UPLINK",
              "ENABLED-DOWNLINK",
              "ENABLED",
              "DISABLED",
              "REMOVED"
            ]
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "responses": {
      "400": {
        "description": "Bad request",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "406": {
        "description": "Not Acceptable",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "411": {
        "description": "Length Required",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "412": {
        "description": "Precondition Failed",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "413": {
        "description": "Payload Too Large",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "414": {
        "description": "URI Too Long",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "415": {
        "description": "Unsupported Media Type",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "default": {
        "description": "Generic Error"
      }
    }
  }
}